#list-like types: Strings and tuples

>>> name = 'Zophie' 
>>> name[0] 
'Z' 
>>> name[-2] 
'i' 
>>> name[0:4] 
'Zoph' 
>>> 'Zo' in name True 
>>> 'z' in name 
False 
>>> 'p' not in name 
False 
>>> for i in name: 
       print('* * * ' + i + ' * * *')


#Mutable and Immutable Data Types

# A list value is a mutable data type: It can have values added, removed, or changed. However, a string is immutable:
 It cannot be changed. Trying to reassign a single character in a string results in a TypeError error, as you can see by entering the following into the interactive shell:

>>> name = 'Zophie a cat' 
>>> name[7] = 'the' 
Traceback (most recent call last):
  File "<pyshell#50>", line 1, in <module> 
   name[7] = 'the' 
TypeError: 'str' object does not support item assignment

>>> name = 'Zophie a cat' 
>>> newName = name[0:7] + 'the' + name[8:12] 
>>> name 
'Zophie a cat'
>>> newName 
'Zophie the cat'

#If you wanted to actually modify the original list in 
eggs to contain  [4, 5, 6], you would have to do something like this:

>>> eggs = [1, 2, 3] 
>>> del eggs[2] 
>>> del eggs[1] 
>>> del eggs[0] 
>>> eggs.append(4) 
>>> eggs.append(5) 
>>> eggs.append(6) 
>>> eggs 
[4, 5, 6]

